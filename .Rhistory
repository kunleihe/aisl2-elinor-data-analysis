geom_point(size = 5, show.legend = FALSE) +
geom_errorbar(aes(ymin = emmean - SE, ymax = emmean + SE), width = 0.2, colour="#404040", alpha=0.8) +
scale_x_discrete(labels=c("CA-\nInteractive\n(N=66)","Human-\nInteractive\n(N=55)", "Pseudo-\ninteractive\n(N=53)", "Non-\nInteractive\n(N=57)")) +
scale_color_manual(name="Condition", values = c("#F97B22", "#7AA874","#6096B4", "gray")) +
labs(
title = "Predicted effects of condition on immediate post-test scores \n(no covariates, full sample)",
x = "",
y = "Predicted scores"
) +
theme_classic() +
theme(legend.title=element_blank()) +
theme(panel.grid.major.y = element_line()) +
theme(text = element_text(size = 14),
axis.text.x = element_text(size=14, color="black"),
plot.title = element_text(hjust = 0.5))
# save
ggsave("figures/main-effect-immediate-full-no-controls.png", width = 7, height = 6, dpi = 300)
model_full_no_control <- lmer(total_score_z ~ condition + (1|id), data = df_long_post)
summary(model_full_no_control)
# get the p-value for each of the coefficients
model_test <- lmerTest::as_lmerModLmerTest(model_full_no_control)
summary(model_test)
# get the number of unique id each condition
df_long_post %>%
filter(!is.na(total_score_z)) %>%
group_by(condition) %>%
summarise(n = n_distinct(id))
# draw a plot of the mixed-effects model, x-axis is the condition, y-axis is the coefficients, and the error bar is the standard error, represent the coefficents using a point
emm_condition <- emmeans(model_full_no_control, ~ condition)
emm_df <- as.data.frame(emm_condition)
emm_df$condition <- factor(emm_df$condition,
levels = c("interactive", "human", "semi", "no"))
ggplot(emm_df, aes(x = condition, y = emmean, color = condition)) +
geom_point(size = 5, show.legend = FALSE) +
geom_errorbar(aes(ymin = emmean - SE, ymax = emmean + SE), width = 0.2, colour="#404040", alpha=0.8) +
scale_x_discrete(labels=c("CA-\nInteractive\n(N=66)","Human-\nInteractive\n(N=55)", "Pseudo-\ninteractive\n(N=53)", "Non-\nInteractive\n(N=57)")) +
scale_color_manual(name="Condition", values = c("#F97B22", "#7AA874","#6096B4", "gray")) +
labs(
title = "Predicted effects of condition on immediate post-test scores \n(no covariates, full sample)",
x = "",
y = "Predicted scores"
) +
theme_classic() +
theme(legend.title=element_blank()) +
theme(panel.grid.major.y = element_line()) +
theme(text = element_text(size = 14),
axis.text.x = element_text(size=14, color="black"),
plot.title = element_text(hjust = 0.5))
# save
ggsave("figures/main-effect-immediate-full-no-controls.png", width = 7, height = 6, dpi = 300)
model_full_with_controls <- lmer(total_score_z ~ condition + age + gender + ethnicity + lens_score + QUILS_score + MEFS_score + ToM_total_score + pretest_score + (1|id), data = df_long_post)
summary(model_full_with_controls)
# get the p-value for each of the coefficients
model_test <- lmerTest::as_lmerModLmerTest(model_full_with_controls)
summary(model_test)
# get the number of participant each group with no missing data in all the baseline measures
df_long_post %>%
filter(!is.na(age) & !is.na(gender) & !is.na(ethnicity) & !is.na(lens_score) & !is.na(QUILS_score) & !is.na(MEFS_score) & !is.na(ToM_total_score) & !is.na(pretest_score) & !is.na(total_score_z)) %>%
group_by(condition) %>%
summarise(n = n_distinct(id))
# draw a plot of the mixed-effects model, x-axis is the condition, y-axis is the coefficients, and the error bar is the standard error, represent the coefficents using a point
# Get estimated marginal means for condition
emm_condition <- emmeans(model_full_with_controls, ~ condition)
emm_df <- as.data.frame(emm_condition)
emm_df$condition <- factor(emm_df$condition,
levels = c("interactive", "human", "semi", "no"))
ggplot(emm_df, aes(x = condition, y = emmean, color = condition)) +
geom_point(size = 5, show.legend = FALSE) +
geom_errorbar(aes(ymin = emmean - SE, ymax = emmean + SE), width = 0.2, colour="#404040", alpha=0.8) +
scale_x_discrete(labels=c("CA-\nInteractive\n(N=60)","Human-\nInteractive\n(N=47)", "Pseudo-\ninteractive\n(N=44)", "Non-\nInteractive\n(N=48)")) +
scale_color_manual(name="Condition", values = c("#F97B22", "#7AA874","#6096B4", "gray")) +
labs(
title = "Predicted effects of condition on immediate post-test scores \n(with covariates, full sample)",
x = "",
y = "Predicted scores"
) +
theme_classic() +
theme(legend.title=element_blank()) +
theme(panel.grid.major.y = element_line()) +
theme(text = element_text(size = 14),
axis.text.x = element_text(size=14, color="black"),
plot.title = element_text(hjust = 0.5))
# save
ggsave("figures/main-effect-immediate-full-with-controls.png", width = 7, height = 6, dpi = 300)
model_balanced_no_controls <- lmer(total_score_z ~ condition + (1|id), data = df_long_post_matched)
summary(model_balanced_no_controls)
# get the p-value for each of the coefficients
model_test <- lmerTest::as_lmerModLmerTest(model_balanced_no_controls)
summary(model_test)
df_long_post_matched %>%
filter(!is.na(total_score_z)) %>%
group_by(condition) %>%
summarise(n = n_distinct(id))
# draw a plot of the mixed-effects model, x-axis is the condition, y-axis is the coefficients, and the error bar is the standard error, represent the coefficents using a point
emm_condition <- emmeans(model_balanced_no_controls, ~ condition)
emm_df <- as.data.frame(emm_condition)
emm_df$condition <- factor(emm_df$condition,
levels = c("interactive", "human", "semi", "no"))
ggplot(emm_df, aes(x = condition, y = emmean, color = condition)) +
geom_point(size = 5, show.legend = FALSE) +
geom_errorbar(aes(ymin = emmean - SE, ymax = emmean + SE), width = 0.2, colour="#404040", alpha=0.8) +
scale_x_discrete(labels=c("CA-\nInteractive\n(N=50)","Human-\nInteractive\n(N=45)", "Pseudo-\ninteractive\n(N=43)", "Non-\nInteractive\n(N=47)")) +
scale_color_manual(name="Condition", values = c("#F97B22", "#7AA874","#6096B4", "gray")) +
labs(
title = "Predicted effects of condition on immediate post-test scores \n(no covariates, balanced sample)",
x = "",
y = "Predicted scores"
) +
theme_classic() +
theme(legend.title=element_blank()) +
theme(panel.grid.major.y = element_line()) +
theme(text = element_text(size = 14),
axis.text.x = element_text(size=14, color="black"),
plot.title = element_text(hjust = 0.5))
# save
ggsave("figures/main-effect-immediate-balanced-no-controls.png", width = 7, height = 6, dpi = 300)
model_balanced_with_controls <- lmer(total_score_z ~ condition + age + gender + ethnicity + lens_score + QUILS_score + MEFS_score + ToM_total_score + pretest_score + (1|id), data = df_long_post_matched)
summary(model_balanced_with_controls)
# get the p-value for each of the coefficients
model_test <- lmerTest::as_lmerModLmerTest(model_balanced_with_controls)
summary(model_test)
df_long_post_matched %>%
filter(!is.na(age) & !is.na(gender) & !is.na(ethnicity) & !is.na(lens_score) & !is.na(QUILS_score) & !is.na(MEFS_score) & !is.na(ToM_total_score) & !is.na(pretest_score) & !is.na(total_score_z)) %>%
group_by(condition) %>%
summarise(n = n_distinct(id))
# draw a plot of the mixed-effects model, x-axis is the condition, y-axis is the coefficients, and the error bar is the standard error, represent the coefficents using a point
emm_condition <- emmeans(model_balanced_with_controls, ~ condition)
emm_df <- as.data.frame(emm_condition)
emm_df$condition <- factor(emm_df$condition,
levels = c("interactive", "human", "semi", "no"))
ggplot(emm_df, aes(x = condition, y = emmean, color = condition)) +
geom_point(size = 5, show.legend = FALSE) +
geom_errorbar(aes(ymin = emmean - SE, ymax = emmean + SE), width = 0.2, colour="#404040", alpha=0.8) +
scale_x_discrete(labels=c("CA-\nInteractive\n(N=44)","Human-\nInteractive\n(N=39)", "Pseudo-\ninteractive\n(N=36)", "Non-\nInteractive\n(N=40)")) +
scale_color_manual(name="Condition", values = c("#F97B22", "#7AA874","#6096B4", "gray")) +
labs(
title = "Predicted effects of condition on immediate post-test scores \n(with covariates, balanced sample)",
x = "",
y = "Predicted scores"
) +
theme_classic() +
theme(legend.title=element_blank()) +
theme(panel.grid.major.y = element_line()) +
theme(text = element_text(size = 14),
axis.text.x = element_text(size=14, color="black"),
plot.title = element_text(hjust = 0.5))
# save
ggsave("figures/main-effect-immediate-balanced-with-controls.png", width = 7, height = 6, dpi = 300)
# draw a plot of the mixed-effects model, x-axis is the condition, y-axis is the coefficients, and the error bar is the standard error, represent the coefficents using a point
emm_condition <- emmeans(model_full_no_control, ~ condition)
emm_df <- as.data.frame(emm_condition)
emm_df$condition <- factor(emm_df$condition,
levels = c("interactive", "human", "semi", "no"))
ggplot(emm_df, aes(x = condition, y = emmean, color = condition)) +
geom_point(size = 5, show.legend = FALSE) +
geom_errorbar(aes(ymin = emmean - SE, ymax = emmean + SE), width = 0.2, colour="#404040", alpha=0.8) +
scale_x_discrete(labels=c("CA-\nInteractive\n(N=66)","Human-\nInteractive\n(N=55)", "Pseudo-\ninteractive\n(N=53)", "Non-\nInteractive\n(N=57)")) +
scale_color_manual(name="Condition", values = c("#F97B22", "#7AA874","#6096B4", "gray")) +
labs(
title = "Predicted effects of condition on delayed post-test scores \n(no covariates, full sample)",
x = "",
y = "Predicted scores"
) +
theme_classic() +
theme(legend.title=element_blank()) +
theme(panel.grid.major.y = element_line()) +
theme(text = element_text(size = 14),
axis.text.x = element_text(size=14, color="black"),
plot.title = element_text(hjust = 0.5))
# save
ggsave("figures/main-effect-delayed-full-no-controls.png", width = 7, height = 6, dpi = 300)
model_full_no_control <- lmer(total_score_z ~ condition + (1|id), data = df_long_delayed)
summary(model_full_no_control)
# get the p-value for each of the coefficients
model_test <- lmerTest::as_lmerModLmerTest(model_full_no_control)
summary(model_test)
# get the number of unique id each condition
df_long_post %>%
filter(!is.na(total_score_z)) %>%
group_by(condition) %>%
summarise(n = n_distinct(id))
# draw a plot of the mixed-effects model, x-axis is the condition, y-axis is the coefficients, and the error bar is the standard error, represent the coefficents using a point
emm_condition <- emmeans(model_full_no_control, ~ condition)
emm_df <- as.data.frame(emm_condition)
emm_df$condition <- factor(emm_df$condition,
levels = c("interactive", "human", "semi", "no"))
ggplot(emm_df, aes(x = condition, y = emmean, color = condition)) +
geom_point(size = 5, show.legend = FALSE) +
geom_errorbar(aes(ymin = emmean - SE, ymax = emmean + SE), width = 0.2, colour="#404040", alpha=0.8) +
scale_x_discrete(labels=c("CA-\nInteractive\n(N=66)","Human-\nInteractive\n(N=55)", "Pseudo-\ninteractive\n(N=53)", "Non-\nInteractive\n(N=57)")) +
scale_color_manual(name="Condition", values = c("#F97B22", "#7AA874","#6096B4", "gray")) +
labs(
title = "Predicted effects of condition on delayed post-test scores \n(no covariates, full sample)",
x = "",
y = "Predicted scores"
) +
theme_classic() +
theme(legend.title=element_blank()) +
theme(panel.grid.major.y = element_line()) +
theme(text = element_text(size = 14),
axis.text.x = element_text(size=14, color="black"),
plot.title = element_text(hjust = 0.5))
# save
ggsave("figures/main-effect-delayed-full-no-controls.png", width = 7, height = 6, dpi = 300)
# Factor variables
## factor condition, set interactive as reference
df_long_delayed$condition <- factor(df_long_post$condition, levels = c("interactive", "no", "semi", "human"))
# Factor variables
## factor condition, set interactive as reference
df_long_delayed$condition <- factor(df_long_delayed$condition, levels = c("interactive", "no", "semi", "human"))
df_long_delayed_matched$condition <- factor(df_long_delayed_matched$condition, levels = c("interactive", "no", "semi", "human"))
model_full_no_control <- lmer(total_score_z ~ condition + (1|id), data = df_long_delayed)
summary(model_full_no_control)
# get the p-value for each of the coefficients
model_test <- lmerTest::as_lmerModLmerTest(model_full_no_control)
summary(model_test)
# get the number of unique id each condition
df_long_post %>%
filter(!is.na(total_score_z)) %>%
group_by(condition) %>%
summarise(n = n_distinct(id))
# draw a plot of the mixed-effects model, x-axis is the condition, y-axis is the coefficients, and the error bar is the standard error, represent the coefficents using a point
emm_condition <- emmeans(model_full_no_control, ~ condition)
emm_df <- as.data.frame(emm_condition)
emm_df$condition <- factor(emm_df$condition,
levels = c("interactive", "human", "semi", "no"))
ggplot(emm_df, aes(x = condition, y = emmean, color = condition)) +
geom_point(size = 5, show.legend = FALSE) +
geom_errorbar(aes(ymin = emmean - SE, ymax = emmean + SE), width = 0.2, colour="#404040", alpha=0.8) +
scale_x_discrete(labels=c("CA-\nInteractive\n(N=66)","Human-\nInteractive\n(N=55)", "Pseudo-\ninteractive\n(N=53)", "Non-\nInteractive\n(N=57)")) +
scale_color_manual(name="Condition", values = c("#F97B22", "#7AA874","#6096B4", "gray")) +
labs(
title = "Predicted effects of condition on delayed post-test scores \n(no covariates, full sample)",
x = "",
y = "Predicted scores"
) +
theme_classic() +
theme(legend.title=element_blank()) +
theme(panel.grid.major.y = element_line()) +
theme(text = element_text(size = 14),
axis.text.x = element_text(size=14, color="black"),
plot.title = element_text(hjust = 0.5))
# save
ggsave("figures/main-effect-delayed-full-no-controls.png", width = 7, height = 6, dpi = 300)
model_full_with_controls <- lmer(total_score_z ~ condition + age + gender + ethnicity + lens_score + QUILS_score + MEFS_score + ToM_total_score + pretest_score + (1|id), data = df_long_delayed)
summary(model_full_with_controls)
# get the p-value for each of the coefficients
model_test <- lmerTest::as_lmerModLmerTest(model_full_with_controls)
summary(model_test)
# get the number of participant each group with no missing data in all the baseline measures
df_long_post %>%
filter(!is.na(age) & !is.na(gender) & !is.na(ethnicity) & !is.na(lens_score) & !is.na(QUILS_score) & !is.na(MEFS_score) & !is.na(ToM_total_score) & !is.na(pretest_score) & !is.na(total_score_z)) %>%
group_by(condition) %>%
summarise(n = n_distinct(id))
model_full_no_control <- lmer(total_score_z ~ condition + (1|id), data = df_long_delayed)
summary(model_full_no_control)
# get the p-value for each of the coefficients
model_test <- lmerTest::as_lmerModLmerTest(model_full_no_control)
summary(model_test)
# get the number of unique id each condition
df_long_delayed %>%
filter(!is.na(total_score_z)) %>%
group_by(condition) %>%
summarise(n = n_distinct(id))
# draw a plot of the mixed-effects model, x-axis is the condition, y-axis is the coefficients, and the error bar is the standard error, represent the coefficents using a point
emm_condition <- emmeans(model_full_no_control, ~ condition)
emm_df <- as.data.frame(emm_condition)
emm_df$condition <- factor(emm_df$condition,
levels = c("interactive", "human", "semi", "no"))
ggplot(emm_df, aes(x = condition, y = emmean, color = condition)) +
geom_point(size = 5, show.legend = FALSE) +
geom_errorbar(aes(ymin = emmean - SE, ymax = emmean + SE), width = 0.2, colour="#404040", alpha=0.8) +
scale_x_discrete(labels=c("CA-\nInteractive\n(N=66)","Human-\nInteractive\n(N=35)", "Pseudo-\ninteractive\n(N=31)", "Non-\nInteractive\n(N=43)")) +
scale_color_manual(name="Condition", values = c("#F97B22", "#7AA874","#6096B4", "gray")) +
labs(
title = "Predicted effects of condition on delayed post-test scores \n(no covariates, full sample)",
x = "",
y = "Predicted scores"
) +
theme_classic() +
theme(legend.title=element_blank()) +
theme(panel.grid.major.y = element_line()) +
theme(text = element_text(size = 14),
axis.text.x = element_text(size=14, color="black"),
plot.title = element_text(hjust = 0.5))
# save
ggsave("figures/main-effect-delayed-full-no-controls.png", width = 7, height = 6, dpi = 300)
model_full_with_controls <- lmer(total_score_z ~ condition + age + gender + ethnicity + lens_score + QUILS_score + MEFS_score + ToM_total_score + pretest_score + (1|id), data = df_long_delayed)
summary(model_full_with_controls)
# get the p-value for each of the coefficients
model_test <- lmerTest::as_lmerModLmerTest(model_full_with_controls)
summary(model_test)
# get the number of participant each group with no missing data in all the baseline measures
df_long_delayed %>%
filter(!is.na(age) & !is.na(gender) & !is.na(ethnicity) & !is.na(lens_score) & !is.na(QUILS_score) & !is.na(MEFS_score) & !is.na(ToM_total_score) & !is.na(pretest_score) & !is.na(total_score_z)) %>%
group_by(condition) %>%
summarise(n = n_distinct(id))
# draw a plot of the mixed-effects model, x-axis is the condition, y-axis is the coefficients, and the error bar is the standard error, represent the coefficents using a point
# Get estimated marginal means for condition
emm_condition <- emmeans(model_full_with_controls, ~ condition)
emm_df <- as.data.frame(emm_condition)
emm_df$condition <- factor(emm_df$condition,
levels = c("interactive", "human", "semi", "no"))
ggplot(emm_df, aes(x = condition, y = emmean, color = condition)) +
geom_point(size = 5, show.legend = FALSE) +
geom_errorbar(aes(ymin = emmean - SE, ymax = emmean + SE), width = 0.2, colour="#404040", alpha=0.8) +
scale_x_discrete(labels=c("CA-\nInteractive\n(N=60)","Human-\nInteractive\n(N=29)", "Pseudo-\ninteractive\n(N=28)", "Non-\nInteractive\n(N=36)")) +
scale_color_manual(name="Condition", values = c("#F97B22", "#7AA874","#6096B4", "gray")) +
labs(
title = "Predicted effects of condition on delayed post-test scores \n(with covariates, full sample)",
x = "",
y = "Predicted scores"
) +
theme_classic() +
theme(legend.title=element_blank()) +
theme(panel.grid.major.y = element_line()) +
theme(text = element_text(size = 14),
axis.text.x = element_text(size=14, color="black"),
plot.title = element_text(hjust = 0.5))
# save
ggsave("figures/main-effect-delayed-full-with-controls.png", width = 7, height = 6, dpi = 300)
model_balanced_no_controls <- lmer(total_score_z ~ condition + (1|id), data = df_long_delayed_matched)
summary(model_balanced_no_controls)
# get the p-value for each of the coefficients
model_test <- lmerTest::as_lmerModLmerTest(model_balanced_no_controls)
summary(model_test)
df_long_delayed_matched %>%
filter(!is.na(total_score_z)) %>%
group_by(condition) %>%
summarise(n = n_distinct(id))
# draw a plot of the mixed-effects model, x-axis is the condition, y-axis is the coefficients, and the error bar is the standard error, represent the coefficents using a point
emm_condition <- emmeans(model_balanced_no_controls, ~ condition)
emm_df <- as.data.frame(emm_condition)
emm_df$condition <- factor(emm_df$condition,
levels = c("interactive", "human", "semi", "no"))
ggplot(emm_df, aes(x = condition, y = emmean, color = condition)) +
geom_point(size = 5, show.legend = FALSE) +
geom_errorbar(aes(ymin = emmean - SE, ymax = emmean + SE), width = 0.2, colour="#404040", alpha=0.8) +
scale_x_discrete(labels=c("CA-\nInteractive\n(N=50)","Human-\nInteractive\n(N=45)", "Pseudo-\ninteractive\n(N=43)", "Non-\nInteractive\n(N=47)")) +
scale_color_manual(name="Condition", values = c("#F97B22", "#7AA874","#6096B4", "gray")) +
labs(
title = "Predicted effects of condition on delayed post-test scores \n(no covariates, balanced sample)",
x = "",
y = "Predicted scores"
) +
theme_classic() +
theme(legend.title=element_blank()) +
theme(panel.grid.major.y = element_line()) +
theme(text = element_text(size = 14),
axis.text.x = element_text(size=14, color="black"),
plot.title = element_text(hjust = 0.5))
# save
ggsave("figures/main-effect-delayed-balanced-no-controls.png", width = 7, height = 6, dpi = 300)
model_balanced_with_controls <- lmer(total_score_z ~ condition + age + gender + ethnicity + lens_score + QUILS_score + MEFS_score + ToM_total_score + pretest_score + (1|id), data = df_long_delayed_matched)
summary(model_balanced_with_controls)
# get the p-value for each of the coefficients
model_test <- lmerTest::as_lmerModLmerTest(model_balanced_with_controls)
summary(model_test)
df_long_delayed_matched %>%
filter(!is.na(age) & !is.na(gender) & !is.na(ethnicity) & !is.na(lens_score) & !is.na(QUILS_score) & !is.na(MEFS_score) & !is.na(ToM_total_score) & !is.na(pretest_score) & !is.na(total_score_z)) %>%
group_by(condition) %>%
summarise(n = n_distinct(id))
# draw a plot of the mixed-effects model, x-axis is the condition, y-axis is the coefficients, and the error bar is the standard error, represent the coefficents using a point
emm_condition <- emmeans(model_balanced_with_controls, ~ condition)
emm_df <- as.data.frame(emm_condition)
emm_df$condition <- factor(emm_df$condition,
levels = c("interactive", "human", "semi", "no"))
ggplot(emm_df, aes(x = condition, y = emmean, color = condition)) +
geom_point(size = 5, show.legend = FALSE) +
geom_errorbar(aes(ymin = emmean - SE, ymax = emmean + SE), width = 0.2, colour="#404040", alpha=0.8) +
scale_x_discrete(labels=c("CA-\nInteractive\n(N=44)","Human-\nInteractive\n(N=39)", "Pseudo-\ninteractive\n(N=36)", "Non-\nInteractive\n(N=40)")) +
scale_color_manual(name="Condition", values = c("#F97B22", "#7AA874","#6096B4", "gray")) +
labs(
title = "Predicted effects of condition on delayed post-test scores \n(with covariates, balanced sample)",
x = "",
y = "Predicted scores"
) +
theme_classic() +
theme(legend.title=element_blank()) +
theme(panel.grid.major.y = element_line()) +
theme(text = element_text(size = 14),
axis.text.x = element_text(size=14, color="black"),
plot.title = element_text(hjust = 0.5))
# save
ggsave("figures/main-effect-delayed-balanced-with-controls.png", width = 7, height = 6, dpi = 300)
# draw a plot of the mixed-effects model, x-axis is the condition, y-axis is the coefficients, and the error bar is the standard error, represent the coefficents using a point
emm_condition <- emmeans(model_balanced_with_controls, ~ condition)
emm_df <- as.data.frame(emm_condition)
emm_df$condition <- factor(emm_df$condition,
levels = c("interactive", "human", "semi", "no"))
ggplot(emm_df, aes(x = condition, y = emmean, color = condition)) +
geom_point(size = 5, show.legend = FALSE) +
geom_errorbar(aes(ymin = emmean - SE, ymax = emmean + SE), width = 0.2, colour="#404040", alpha=0.8) +
scale_x_discrete(labels=c("CA-\nInteractive\n(N=44)","Human-\nInteractive\n(N=23)", "Pseudo-\ninteractive\n(N=22)", "Non-\nInteractive\n(N=32)")) +
scale_color_manual(name="Condition", values = c("#F97B22", "#7AA874","#6096B4", "gray")) +
labs(
title = "Predicted effects of condition on delayed post-test scores \n(with covariates, balanced sample)",
x = "",
y = "Predicted scores"
) +
theme_classic() +
theme(legend.title=element_blank()) +
theme(panel.grid.major.y = element_line()) +
theme(text = element_text(size = 14),
axis.text.x = element_text(size=14, color="black"),
plot.title = element_text(hjust = 0.5))
# save
ggsave("figures/main-effect-delayed-balanced-with-controls.png", width = 7, height = 6, dpi = 300)
model_balanced_no_controls <- lmer(total_score_z ~ condition + (1|id), data = df_long_delayed_matched)
summary(model_balanced_no_controls)
# get the p-value for each of the coefficients
model_test <- lmerTest::as_lmerModLmerTest(model_balanced_no_controls)
summary(model_test)
df_long_delayed_matched %>%
filter(!is.na(total_score_z)) %>%
group_by(condition) %>%
summarise(n = n_distinct(id))
# draw a plot of the mixed-effects model, x-axis is the condition, y-axis is the coefficients, and the error bar is the standard error, represent the coefficents using a point
emm_condition <- emmeans(model_balanced_no_controls, ~ condition)
emm_df <- as.data.frame(emm_condition)
emm_df$condition <- factor(emm_df$condition,
levels = c("interactive", "human", "semi", "no"))
ggplot(emm_df, aes(x = condition, y = emmean, color = condition)) +
geom_point(size = 5, show.legend = FALSE) +
geom_errorbar(aes(ymin = emmean - SE, ymax = emmean + SE), width = 0.2, colour="#404040", alpha=0.8) +
scale_x_discrete(labels=c("CA-\nInteractive\n(N=50)","Human-\nInteractive\n(N=28)", "Pseudo-\ninteractive\n(N=24)", "Non-\nInteractive\n(N=37)")) +
scale_color_manual(name="Condition", values = c("#F97B22", "#7AA874","#6096B4", "gray")) +
labs(
title = "Predicted effects of condition on delayed post-test scores \n(no covariates, balanced sample)",
x = "",
y = "Predicted scores"
) +
theme_classic() +
theme(legend.title=element_blank()) +
theme(panel.grid.major.y = element_line()) +
theme(text = element_text(size = 14),
axis.text.x = element_text(size=14, color="black"),
plot.title = element_text(hjust = 0.5))
# save
ggsave("figures/main-effect-delayed-balanced-no-controls.png", width = 7, height = 6, dpi = 300)
View(df_long_delayed_matched)
View(df_long_post_matched)
model_full_no_control <- lmer(total_score_z ~ condition + (1|id), data = df_long_post)
summary(model_full_no_control)
# get the p-value for each of the coefficients
model_test <- lmerTest::as_lmerModLmerTest(model_full_no_control)
summary(model_test)
# get the number of unique id each condition
df_long_post %>%
filter(!is.na(total_score_z)) %>%
group_by(condition) %>%
summarise(n = n_distinct(id))
model_full_no_control <- lmer(total_score_z ~ condition + (1|id), data = df_long_delayed)
summary(model_full_no_control)
# get the p-value for each of the coefficients
model_test <- lmerTest::as_lmerModLmerTest(model_full_no_control)
summary(model_test)
# get the number of unique id each condition
df_long_delayed %>%
filter(!is.na(total_score_z)) %>%
group_by(condition) %>%
summarise(n = n_distinct(id))
# Get unique IDs by condition for delayed dataset
delayed_ids <- df_long_delayed %>%
filter(!is.na(total_score_z)) %>%
group_by(condition) %>%
summarise(ids = list(unique(id)))
View(delayed_ids)
# Get unique IDs by condition for post dataset
post_ids <- df_long_post %>%
filter(!is.na(total_score_z)) %>%
group_by(condition) %>%
summarise(ids = list(unique(id)))
# For each condition, find which IDs are in delayed but not in post
in_delayed_not_post <- delayed_ids %>%
full_join(post_ids, by = "condition", suffix = c("_delayed", "_post")) %>%
mutate(
only_in_delayed = map2(ids_delayed, ids_post, ~setdiff(unlist(.x), unlist(.y))),
only_in_post = map2(ids_post, ids_delayed, ~setdiff(unlist(.x), unlist(.y)))
)
# Get unique IDs from delayed dataset
delayed_ids <- df_long_delayed %>%
filter(!is.na(total_score_z)) %>%
select(id, condition) %>%
distinct()
# Get unique IDs from post dataset
post_ids <- df_long_post %>%
filter(!is.na(total_score_z)) %>%
select(id, condition) %>%
distinct()
View(post_ids)
View(delayed_ids)
# IDs in delayed but not in post
only_in_delayed <- anti_join(delayed_ids, post_ids, by = c("id", "condition"))
# IDs in post but not in delayed
only_in_post <- anti_join(post_ids, delayed_ids, by = c("id", "condition"))
View(only_in_delayed)
View(only_in_post)
# get the number of unique id each condition
df_long_delayed %>%
filter(!is.na(total_score_z)) %>%
summarise(n = n_distinct(id))
model_full_no_control <- lmer(total_score_z ~ condition + (1|id), data = df_long_delayed)
summary(model_full_no_control)
# get the p-value for each of the coefficients
model_test <- lmerTest::as_lmerModLmerTest(model_full_no_control)
summary(model_test)
# get the number of unique id each condition
df_long_delayed %>%
filter(!is.na(total_score_z)) %>%
group_by(condition) %>%
summarise(n = n_distinct(id))
